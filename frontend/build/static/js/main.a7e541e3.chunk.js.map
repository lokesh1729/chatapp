{"version":3,"sources":["actions/error.actions.js","components/Login/login.js","actions/login.actions.js","actions/types.js","actions/constants.js","components/common/Alerts.js","reducers/login.reducer.js","reducers/error.reducer.js","reducers/message.reducer.js","reducers/index.js","store/index.js","components/common/Spinner.js","components/Home/home.js","components/RoomEnter/RoomEnter.js","components/Room/Room.js","components/common/AuthLayer.js","App.js","serviceWorker.js","index.js"],"names":["createErrors","msg_type","msg","status","type","payload","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitLogin","e","preventDefault","login","state","username","password","onChange","setState","defineProperty","target","name","value","isAuthenticated","react_default","a","createElement","react","react_router","to","bloomer_min","className","isLoading","onSubmit","placeholder","required","isColor","Component","connect","dispatch","body","JSON","stringify","axios","post","headers","Content-Type","then","response","data","loginSuccess","statusText","catch","err","console","log","message","Alerts","prevProps","_prevState","_this$props","errors","alert","messages","error","concat","join","email","non_field_errors","success","withAlert","Cookies","require","initialState","get","loginReducer","arguments","length","undefined","action","token","set","path","expires","Date","expiry","objectSpread","errorReducer","messageReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","Spinner","src","alt","Home","RoomEnter","enterRoom","event","history","push","roomName","roomNameChange","val","_","keyDownHandler","keyCode","Section","Container","Label","Input","onKeyDown","Button","onClick","authRequired","WrappedComponent","innerClass","_React$Component","inherits","createClass","key","React","withCookies","Room","sendMessage","socket","send","room_name","match","params","chatLog","cookies","protocolPrefix","window","location","protocol","host","WebSocket","self","onopen","onmessage","parse","prevState","toConsumableArray","onerror","onclose","Authorization","res","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","created","return","statusMessage","_this2","chatlog","map","Field","TextArea","isSize","Control","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","WrappedLogin","common_Spinner","common_Alerts","Login_login","App","es","es6","react_alert","assign","template","AlertTemplate","react_router_dom","basename","exact","component","Boolean","hostname","Raven","config","process","REACT_APP_SENTRY_URL","install","rootElement","document","getElementById","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7e541e3.chunk.js","sourcesContent":["export const createErrors = (msg_type, msg, status) => {\n    return { type: msg_type, payload: { msg, status } };\n};\n\nexport const createMessages = (msg_type, msg) => {\n    return { type: msg_type, payload: msg };\n};\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/login.actions\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n    Container,\n    Section,\n    Field,\n    Label,\n    Control,\n    Input,\n    Button,\n} from \"bloomer\";\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n        };\n    }\n\n    // componentDidMount() {\n    //     console.log(`Login component CDM : ${JSON.stringify(this.props)}`);\n    // }\n\n    // componentDidUpdate(prevProps, _) {\n    //     console.log(`Login componenet CDU : ${JSON.stringify(prevProps)}`);\n    // }\n\n    // componentWillUnmount() {\n    //     console.log(`Login component CWU : ${JSON.stringify(this.props)}`);\n    // }\n\n    submitLogin = (e) => {\n        e.preventDefault();\n        this.props.login(this.state.username, this.state.password);\n    };\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n    render() {\n        // console.log(`Login Render...`);\n        const isAuthenticated = this.props.state.isAuthenticated;\n        return (\n            <Fragment>\n                {isAuthenticated ? (\n                    <Redirect to={\"/room\"} />\n                ) : (\n                    <Section\n                        className={\n                            this.props.state.isLoading ? \"opacity-25\" : \"\"\n                        }\n                    >\n                        <Container>\n                            <form onSubmit={this.submitLogin}>\n                                <Field>\n                                    <Label>Username</Label>\n                                    <Control>\n                                        <Input\n                                            type=\"text\"\n                                            onChange={this.onChange}\n                                            name=\"username\"\n                                            placeholder=\"Enter username\"\n                                            required={true}\n                                        />\n                                    </Control>\n                                </Field>\n                                <Field>\n                                    <Label>Password</Label>\n                                    <Control>\n                                        <Input\n                                            type=\"password\"\n                                            onChange={this.onChange}\n                                            name=\"password\"\n                                            placeholder=\"Enter password\"\n                                            required={true}\n                                        />\n                                    </Control>\n                                </Field>\n                                <Field>\n                                    <Control>\n                                        <Button isColor=\"primary\" type=\"submit\">\n                                            Submit\n                                        </Button>\n                                    </Control>\n                                </Field>\n                            </form>\n                        </Container>\n                    </Section>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    state: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    state: state.login,\n});\nexport default connect(\n    mapStateToProps,\n    { login },\n)(Login);\n","import axios from \"axios\";\nimport * as types from \"./types\";\nimport * as constants from \"./constants\";\nimport { createErrors, createMessages } from \"./error.actions\";\n\nexport const login = (username, password) => (dispatch) => {\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n    };\n    const body = JSON.stringify({ username, password });\n    dispatch({\n        type: types.HTTP_CALL_INITIATED,\n    });\n    axios\n        .post(\"/api/auth/login/\", body, config)\n        .then((response) => {\n            // console.log(response);\n            if (response.status === 200) {\n                dispatch({\n                    type: types.LOGIN,\n                    payload: response.data,\n                });\n                dispatch(\n                    createMessages(types.MESSAGE, {\n                        loginSuccess: \"logged in successfully\",\n                    }),\n                );\n            } else {\n                dispatch(\n                    createErrors(types.ERROR, response.statusText, response.status),\n                );\n            }\n            dispatch({\n                type: types.HTTP_CALL_COMPLETED,\n            });\n        })\n        .catch((err) => {\n            dispatch({\n                type: types.HTTP_CALL_COMPLETED,\n            });\n            if(err.response) {\n                dispatch(\n                  createErrors(\n                    types.ERROR,\n                    err.response.data,\n                    err.response.status,\n                  ),\n                );\n            }\n            console.log(err);\n            dispatch(createErrors(types.ERROR, err.message, 500));\n        })\n        .catch((err) =>\n            dispatch(\n                createErrors(\n                    types.ERROR,\n                    constants.GENERIC_ERROR_MESSAGE,\n                    err.response.status,\n                ),\n            ),\n        );\n};\n","export const LOGIN = \"LOGIN\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const ERROR = \"ERROR\";\nexport const MESSAGE = \"MESSAGE\";\nexport const HTTP_CALL_INITIATED = \"HTTP_CALL_INITIATED\";\nexport const HTTP_CALL_COMPLETED = \"HTTP_CALL_COMPLETED\";\n","export const GENERIC_ERROR_MESSAGE = \"Something went wrong!!!\";\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withAlert } from \"react-alert\";\nimport { connect } from \"react-redux\";\n\nclass Alerts extends Component {\n    componentDidUpdate(prevProps, _prevState) {\n        const { errors, alert, messages } = this.props;\n        if (errors !== prevProps.errors) {\n            if (errors.msg.name) alert.error(`Name: ${errors.msg.name.join()}`);\n            if (errors.msg.email)\n                alert.error(\n                    `${errors.status} : Email: ${errors.msg.email.join()}`,\n                );\n            if (errors.msg.non_field_errors)\n                alert.error(\n                    `${errors.status} : ${errors.msg.non_field_errors.join()}`,\n                );\n            if (errors.msg.username) alert.error(errors.msg.username.join());\n        }\n        if (messages !== prevProps.messages) {\n            if (messages.loginSuccess) {\n                alert.success(messages.loginSuccess);\n            }\n        }\n    }\n\n    render() {\n        return <Fragment />;\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    errors: state.errors,\n    messages: state.messages,\n});\n\nAlerts.propTypes = {\n    errors: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));\n","import * as types from \"../actions/types\";\nconst Cookies = require(\"js-cookie\");\n\nconst initialState = {\n    isAuthenticated: !!Cookies.get(\"authToken\"),\n    isLoading: false,\n};\n\nconst loginReducer = function(state = initialState, action) {\n    switch (action.type) {\n        case types.LOGIN:\n            let token = action.payload.token;\n            Cookies.set(\"authToken\", token, {path: \"/\", expires: new Date(action.payload.expiry)});\n            return {\n                ...state,\n                isAuthenticated: true,\n            };\n        case types.HTTP_CALL_INITIATED:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case types.HTTP_CALL_COMPLETED:\n            return {\n                ...state,\n                isLoading: false,\n            };\n        default:\n            return state;\n    }\n};\nexport default loginReducer;\n","import * as types from \"../actions/types\";\n\nconst initialState = {\n    msg: {},\n    status: \"\",\n};\nconst errorReducer = (state = initialState, action) => {\n    if (action.type === types.ERROR) {\n        return { msg: action.payload.msg, status: action.payload.status };\n    }\n    return state;\n};\nexport default errorReducer;\n","import * as types from \"../actions/types\";\n\nconst initialState = {\n    msg: {},\n};\nconst messageReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.MESSAGE:\n            return (state = action.payload);\n        default:\n            return state;\n    }\n};\nexport default messageReducer;\n","import { combineReducers } from \"redux\";\nimport login from \"./login.reducer\";\nimport errors from \"./error.reducer\";\nimport messages from \"./message.reducer\";\n\nexport default combineReducers({ login, errors, messages });\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst middleware = [thunk];\n\nconst initialState = {};\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Spinner extends Component {\n    render() {\n        return (\n            <Fragment>\n                {this.props.isLoading && (\n                    <div className=\"spinner\">\n                        <img src=\"assets/spinner.gif\" alt=\"loading\" />\n                    </div>\n                )}\n            </Fragment>\n        );\n    }\n}\n\nSpinner.propTypes = {\n    isLoading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n    isLoading: state.login.isLoading,\n});\n\nexport default connect(mapStateToProps)(Spinner);\n","import React, { Component } from \"react\";\n\nclass Home extends Component {\n    // componentDidMount() {\n    //     console.log(`Home component CDM : ${JSON.stringify(this.props)}`);\n    // }\n\n    // componentWillUnmount() {\n    //     console.log(`Home component CWU : ${JSON.stringify(this.props)}`);\n    // }\n    render() {\n        return <div>Home Page</div>;\n    }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Section } from \"bloomer/lib/layout/Section\";\nimport { Container } from \"bloomer/lib/layout/Container\";\nimport { Input } from \"bloomer/lib/elements/Form/Input\";\nimport { Label } from \"bloomer/lib/elements/Form/Label\";\nimport \"./RoomEnter.scss\";\nimport { Button } from \"bloomer/lib/elements/Button\";\n\nclass RoomEnter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      roomName: \"\",\n    };\n  }\n\n  enterRoom = event => {\n    event.preventDefault();\n    this.props.history.push(\"/room/\" + this.state.roomName);\n  };\n\n  roomNameChange = event => {\n    let val = event.target.value;\n    this.setState(_ => ({ roomName: val }));\n  };\n\n  keyDownHandler = event => {\n    if (event.keyCode === 13) {\n      this.enterRoom(event);\n    }\n  };\n\n  render() {\n    return (\n      <Section className=\"room_enter__section\">\n        <Container className=\"room__container\">\n          <Label className=\"room__label\">Enter a room name:</Label>\n          <Input\n            type={\"text\"}\n            className=\"room__input\"\n            onChange={this.roomNameChange}\n            onKeyDown={this.keyDownHandler}\n          />\n          <Button isColor={\"primary\"} className=\"large__btn\" onClick={this.enterRoom}>\n            Enter\n          </Button>\n        </Container>\n      </Section>\n    );\n  }\n}\nexport default RoomEnter;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport authRequired from \"../common/AuthLayer\";\nimport { Section } from \"bloomer/lib/layout/Section\";\nimport { Container } from \"bloomer/lib/layout/Container\";\nimport { Field } from \"bloomer/lib/elements/Form/Field/Field\";\nimport { Control } from \"bloomer/lib/elements/Form/Control\";\nimport { Button } from \"bloomer/lib/elements/Button\";\nimport \"./Room.scss\";\nimport { TextArea } from \"bloomer/lib/elements/Form/TextArea\";\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n    const roomName = this.props.match.params.roomName;\n    this.state = {\n      socket: null,\n      chatLog: [],\n      message: \"\",\n      roomName: roomName,\n    };\n  }\n  componentDidMount() {\n    const token = this.props.cookies.get(\"authToken\");\n    const protocolPrefix = window.location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n    let { host } = window.location;\n    let socket = new WebSocket(\n      `${protocolPrefix}//${host}/ws/chat/${this.state.roomName}/`\n    );\n    let self = this;\n    socket.onopen = e => {\n      console.log(\"opened connection...\");\n    };\n    socket.onmessage = function receiveMessage(e) {\n      console.log(`message received : ${e.data}`);\n      let data = JSON.parse(e.data);\n      self.setState(prevState => ({\n        chatLog: [...prevState.chatLog, data],\n      }));\n    };\n    socket.onerror = err => {\n      console.log(`socket connection closed unexcpectedly ${err}`);\n    };\n    socket.onclose = e => {\n      console.log(\"closing connection...\");\n    };\n    this.setState({ socket });\n    axios.get(`/api/message/room/${this.state.roomName}/`, {\n      headers: {\"Authorization\": `Token ${token}`}\n    }).then(res => {\n      const result = [];\n      for(let val of res.data) {\n        result.push({key: val[\"id\"], message: val[\"text\"], username: val[\"sender_name\"], created: val[\"created_on\"]})\n      }\n      self.setState((prevState) => ({\n        chatLog: [...prevState.chatLog, ...result]\n      }))\n    }).catch(err => {\n      // console.log(`response: ${JSON.stringify(err.response)}`);\n      if(err.response && err.response.status !== 404) {\n        console.log(err.response.statusText, err.response.statusMessage);\n      }\n    })\n  }\n\n  sendMessage = e => {\n    e.preventDefault();\n    this.state.socket.send(JSON.stringify({ message: this.state.message, room_name: this.state.roomName }));\n    this.setState(_ => ({ message: \"\" }));\n  };\n\n  keyDownHandler = event => {\n    if (event.keyCode === 13) {\n      this.sendMessage(event);\n    }\n  };\n\n  render() {\n    const chatlog = this.state.chatLog;\n    return (\n      <Section className=\"bg-purple-400 h-screen\">\n        <Container className=\"h-full\">\n          <div className=\"flex flex-col h-full\">\n            <div className=\"text-3xl text-center flex-auto room__name w-full border-solid border-2 border-white-500 flex-auto\">\n              Room Name : {this.props.match.params.roomName}\n            </div>\n            <div className=\"chat_log__flex flex-auto flex flex-row w-full border-solid border-2 border-t-0 border-white-500 flex-auto\">\n              <div className=\"chat_log w-9/12 border-solid border-r-2 border-white-500 flex-auto\">\n                {chatlog.map(message => (\n                  <div key={message.key}>\n                    <span className=\"message__username text-white\">{message.username}</span> :{\" \"}\n                    <span className=\"message__message break-words\">{message.message}</span>\n                  </div>\n                ))}\n              </div>\n              <div className=\"user_list w-3/12\">\n                <ul>\n                  <li className=\"text-center has-text-info\">user1</li>\n                  <li className=\"text-center has-text-info\">user2</li>\n                  <li className=\"text-center has-text-info\">user3</li>\n                  <li className=\"text-center has-text-info\">user4</li>\n                </ul>\n              </div>\n            </div>\n            <Container className=\"mt-4\">\n              <Field>\n                <TextArea\n                  isSize={\"medium\"}\n                  placeholder=\"Enter message\"\n                  onChange={e => {\n                    let val = e.target.value;\n                    this.setState(_ => ({\n                      message: val,\n                    }));\n                  }}\n                  onKeyDown={this.keyDownHandler}\n                  className=\"resize-none shadow rounded border max-w-sm py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\n                  value={this.state.message}\n                />\n              </Field>\n              <Field>\n                <Control>\n                  <Button isColor=\"primary\" onClick={this.sendMessage}>\n                    Submit\n                  </Button>\n                </Control>\n              </Field>\n            </Container>\n          </div>\n        </Container>\n      </Section>\n    );\n  }\n}\n\nexport default authRequired(Room);\n","import React, { Fragment } from \"react\";\nimport { instanceOf } from 'prop-types';\nimport { connect } from \"react-redux\";\nimport { withCookies, Cookies } from 'react-cookie';\nimport { Redirect } from \"react-router-dom\";\n\nexport default function authRequired(WrappedComponent) {\n    const innerClass = class extends React.Component {\n        static propTypes = {\n            cookies: instanceOf(Cookies).isRequired\n        };\n        render() {\n            const isAuthenticated = this.props.state.isAuthenticated;\n            return (\n                <Fragment>\n                    {!isAuthenticated ? (\n                        <Redirect to={\"/login\"} />\n                    ) : (\n                        <WrappedComponent {...this.props} />\n                    )}\n                </Fragment>\n            );\n        }\n    };\n\n    const mapStateToProps = (state) => ({\n        state: state.login,\n    });\n    return connect(\n        mapStateToProps,\n        null,\n    )(withCookies(innerClass));\n}\n","import React, { Component, Fragment } from \"react\";\nimport Login from \"./components/Login/login\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport \"./App.scss\";\nimport Alerts from \"./components/common/Alerts\";\nimport { Provider } from \"react-redux\";\nimport { CookiesProvider } from 'react-cookie';\nimport store from \"./store\";\nimport Spinner from \"./components/common/Spinner\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/home\";\nimport RoomEnter from \"./components/RoomEnter/RoomEnter\";\nimport Room from \"./components/Room/Room\";\n\nconst options = {\n    // you can also just use 'bottom center'\n    position: positions.BOTTOM_CENTER,\n    timeout: 5000,\n    offset: \"30px\",\n    // you can also just use 'scale'\n    transition: transitions.SCALE,\n};\n\nconst WrappedLogin = (props) => {\n    return (\n        <Fragment>\n            <Spinner />\n            <Alerts />\n            <Login {...props} />\n        </Fragment>\n    );\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <CookiesProvider>\n                  <AlertProvider template={AlertTemplate} {...options}>\n                      <BrowserRouter basename={\"/app\"}>\n                          <Switch>\n                              <Route path={\"/\"} exact component={Home} />\n                              <Route path={\"/login\"} component={WrappedLogin} />\n                              <Route path={\"/room\"} exact component={RoomEnter} />\n                              <Route path={\"/room/:roomName\"} component={Room} />\n                          </Switch>\n                      </BrowserRouter>\n                  </AlertProvider>\n                </CookiesProvider>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./styles/tailwind.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Raven from \"raven-js\";\n\nif (process.env.NODE_ENV === \"production\") {\n    Raven.config(process.env.REACT_APP_SENTRY_URL).install();\n}\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(<App />, rootElement);\nif (module.hot && process.env.NODE_ENV === \"development\") {\n    module.hot.accept(\"./App\", () => {\n        const NextRoot = require(\"./App\").default;\n        ReactDOM.render(<NextRoot />, rootElement);\n    });\n}\n\nserviceWorker.unregister();\n"],"sourceRoot":""}